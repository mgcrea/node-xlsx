{"version":3,"sources":["../src/helpers.js"],"names":["isBoolean","maybeBoolean","isNumber","maybeNumber","isString","maybeString","originDate","Date","UTC","buildExcelDate","value","is1904","epoch","parse","buildSheetFromMatrix","data","options","workSheet","range","s","c","r","e","R","length","C","cell","v","cellRef","utils","encode_cell","t","z","SSF","_table","encode_range"],"mappings":"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","file":"helpers.js","sourcesContent":["import XLSX from 'xlsx';\n\nconst isBoolean = maybeBoolean => typeof maybeBoolean === 'boolean';\nconst isNumber = maybeNumber => typeof maybeNumber === 'number';\nconst isString = maybeString => typeof maybeString === 'string';\n\nconst originDate = new Date(Date.UTC(1899, 11, 30));\n\nconst buildExcelDate = (value, is1904) => {\n  const epoch = Date.parse(value + (is1904 ? 1462 : 0));\n  return (epoch - originDate) / (864e5);\n};\n\nconst buildSheetFromMatrix = (data, options = {}) => {\n  const workSheet = {};\n  const range = {s: {c: 1e7, r: 1e7}, e: {c: 0, r: 0}};\n  for (let R = 0; R !== data.length; ++R) {\n    for (let C = 0; C !== data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      if (data[R][C] === null) {\n        continue; // eslint-disable-line\n      }\n      const cell = {v: data[R][C]};\n      const cellRef = XLSX.utils.encode_cell({c: C, r: R});\n      if (isNumber(cell.v)) {\n        cell.t = 'n';\n      } else if (isBoolean(cell.v)) {\n        cell.t = 'b';\n      } else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.v = buildExcelDate(cell.v);\n        cell.z = XLSX.SSF._table[14]; // eslint-disable-line no-underscore-dangle\n      } else {\n        cell.t = 's';\n      }\n      workSheet[cellRef] = cell;\n    }\n  }\n  if (range.s.c < 1e7) {\n    workSheet['!ref'] = XLSX.utils.encode_range(range);\n  }\n  if (options['!cols']) {\n    workSheet['!cols'] = options['!cols'];\n  }\n  if (options['!merges']) {\n    workSheet['!merges'] = options['!merges'];\n  }\n  return workSheet;\n};\n\nexport {buildSheetFromMatrix, isBoolean, isNumber, isString};\n"]}